// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mniak/hsmlib/retry (interfaces: Strategy)

// Package retry is a generated GoMock package.
package retry

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStrategy is a mock of Strategy interface.
type MockStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockStrategyMockRecorder
}

// MockStrategyMockRecorder is the mock recorder for MockStrategy.
type MockStrategyMockRecorder struct {
	mock *MockStrategy
}

// NewMockStrategy creates a new mock instance.
func NewMockStrategy(ctrl *gomock.Controller) *MockStrategy {
	mock := &MockStrategy{ctrl: ctrl}
	mock.recorder = &MockStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStrategy) EXPECT() *MockStrategyMockRecorder {
	return m.recorder
}

// Try mocks base method.
func (m *MockStrategy) Try(arg0 func() bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Try", arg0)
}

// Try indicates an expected call of Try.
func (mr *MockStrategyMockRecorder) Try(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Try", reflect.TypeOf((*MockStrategy)(nil).Try), arg0)
}
